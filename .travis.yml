language: cpp

dist: trusty
sudo: required

branches:
  only:
    - master

matrix:
  include:
  # Linux clang builds
  - os: linux
    compiler: clang
    env: COMPILER=clang++-4.0
    addons:
      apt:
        packages: ['cmake', 'clang-4.0', 'libstdc++-6-dev']
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-4.0']

  - os: linux
    compiler: clang
    env: COMPILER=clang++-5.0
    addons:
      apt:
        packages: ['cmake', 'clang-5.0', 'libstdc++-6-dev']
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-5.0']

  - os: linux
    compiler: clang
    env: COMPILER=clang++-6.0
    addons:
      apt:
        packages: ['cmake', 'clang-6.0', 'libstdc++-6-dev']
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-6.0']

  # Linux GCC builds
  - os: linux
    compiler: gcc
    env: COMPILER=g++-4.9
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-4.9']

  - os: linux
    compiler: gcc
    env: COMPILER=g++-5
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5']

  - os: linux
    compiler: gcc
    env: COMPILER=g++-6
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-6']

  - os: linux
    compiler: gcc
    env: COMPILER=g++-7
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-7']

  - os: linux
    compiler: gcc
    env: COMPILER=g++-8
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8']

install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

before_script:
  - export CXX=${COMPILER}
  - cd ${TRAVIS_BUILD_DIR}

    # Use Debug builds for building and running examples
  - cmake -H. -BBuild-Debug -DCMAKE_BUILD_TYPE=Debug -DPISTACHE_BUILD_EXAMPLES=true -DPISTACHE_BUILD_TESTS=true -DPISTACHE_SSL=true 

    # Release build
  - cmake -H. -BBuild-Release -DCMAKE_BUILD_TYPE=Release -DPISTACHE_SSL=true 

script:
  - # Go to debug build
  - cd Build-Debug
  - make -j 2 all test ARGS="-V"
  - # Go to release build
  - cd ../Build-Release
  - make -j 2
